/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package categoria;

import Alertas.SeleccionTabla;
import Alertas.SinCamposTabla;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Raomir
 */
public class Lista extends javax.swing.JPanel {

    /**
     * Creates new form Lista
     */
    
    Sentencias s = new Sentencias();
    Opciones op = new Opciones();
    public Lista() {
        initComponents();
        btnEliminar.setVisible(false);
        tablaCategorias.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        limpiaCampos();
    }
    
    void limpiaCampos() {
        if (tablaCategorias.getSelectedRow() > -1) {
            tablaCategorias.removeRowSelectionInterval(tablaCategorias.getSelectedRow(), tablaCategorias.getSelectedRow());
        }
        op.listarCategoria("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        rSPanelsSlider1 = new rojeru_san.RSPanelsSlider();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCategorias = new javax.swing.JTable();
        btnNuevoPrestamo = new rojeru_san.RSButtonRiple();
        btnEliminar = new rojeru_san.RSButtonRiple();
        txtBuscar = new rojeru_san.RSMTextFull();
        btnActualizar = new rojeru_san.RSButtonRiple();

        setPreferredSize(new java.awt.Dimension(620, 440));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rSPanelsSlider1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Categorías");
        rSPanelsSlider1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 10, 150, 60));

        jPanel1.add(rSPanelsSlider1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 80));

        tablaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdCategoría", "Nombre categoría"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCategorias.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(tablaCategorias);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 1050, 380));

        btnNuevoPrestamo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 112, 192)));
        btnNuevoPrestamo.setText("Nuevo");
        btnNuevoPrestamo.setColorHover(new java.awt.Color(255, 255, 255));
        btnNuevoPrestamo.setColorTextHover(new java.awt.Color(0, 112, 192));
        btnNuevoPrestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoPrestamoActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevoPrestamo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 140, -1));

        btnEliminar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 112, 192)));
        btnEliminar.setText("Eliminar");
        btnEliminar.setColorHover(new java.awt.Color(255, 255, 255));
        btnEliminar.setColorTextHover(new java.awt.Color(0, 112, 192));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 140, -1));

        txtBuscar.setPlaceholder("Buscar categoría...");
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        jPanel1.add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 90, -1, -1));

        btnActualizar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 112, 192)));
        btnActualizar.setText("Actualizar");
        btnActualizar.setColorHover(new java.awt.Color(255, 255, 255));
        btnActualizar.setColorTextHover(new java.awt.Color(0, 112, 192));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 140, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 550));
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoPrestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoPrestamoActionPerformed
        Nuevo nuevo = new Nuevo();
        nuevo.setVisible(true);
    }//GEN-LAST:event_btnNuevoPrestamoActionPerformed
   
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        txtBuscar.setText(txtBuscar.getText().toUpperCase());
        op.listarCategoria(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizar();
    }//GEN-LAST:event_btnActualizarActionPerformed
    
    public void actualizar(){
        if (tablaCategorias.getRowCount() > 0) {
            if (tablaCategorias.getSelectedRowCount() > 0) {
                int fila = tablaCategorias.getSelectedRow();
                s.setIdCategoria(tablaCategorias.getValueAt(fila, 0).toString());
                s.setNombreCategoria(tablaCategorias.getValueAt(fila, 1).toString());
                Actualizar act = new Actualizar();
                act.setVisible(true);
            } else {
                SeleccionTabla sel = new SeleccionTabla();
                sel.setVisible(true);
            }
        } else {
            SinCamposTabla sin = new SinCamposTabla();
            sin.setVisible(true);
        }
    }
    
    public void eliminar(){
        if (tablaCategorias.getRowCount() > 0) {
            if (tablaCategorias.getSelectedRowCount() > 0) {
                int fila = tablaCategorias.getSelectedRow();
                s.setIdCategoria(tablaCategorias.getValueAt(fila, 0).toString());
                s.setNombreCategoria(tablaCategorias.getValueAt(fila, 1).toString());
                Eliminar eli = new Eliminar();
                eli.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione un registro.", "Registro Ventas", 0,
                        new ImageIcon(getClass().getResource("")));
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay registros\npara eliminar.", "Registro Ventas", 0,
                    new ImageIcon(getClass().getResource("")));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.RSButtonRiple btnActualizar;
    private rojeru_san.RSButtonRiple btnEliminar;
    private rojeru_san.RSButtonRiple btnNuevoPrestamo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private rojeru_san.RSPanelsSlider rSPanelsSlider1;
    protected static javax.swing.JTable tablaCategorias;
    private rojeru_san.RSMTextFull txtBuscar;
    // End of variables declaration//GEN-END:variables
}
